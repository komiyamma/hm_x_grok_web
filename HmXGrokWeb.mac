/*
 * HmXGrokWeb v 1.1.0.3
 *
 * Copyright (c) 2025 Akitsugu Komiyama
 * under the MIT License
 */


hidemaruversion "9.35.99";

jsmode @"WebView2\HmXGrokWeb";

js {

// ------------- 会話エンジンの設定項目 -------------

const baseUrl = "https://grok.com/";

const renderPaneCustomParam = {
    place: "rightside",            // leftside | rightside | upside | downside
    size: 450,                     // 左や右の配置の時は、横幅のこと。上や下の配置の時は縦幅のこと。
};

const isOneAtTimeAIRenderPane = 1; // AI関連のレンダリング枠は(他の種類のAIも含め)１つだけにする。(複数起動しそうになると、前のものが閉じる）

// --------------------------------------------------

const renderPaneTargetName = "HmXGrokWeb";

const currentMacroDirectory = currentmacrodirectory();

const com = createobject(`${currentMacroDirectory}\\${renderPaneTargetName}.dll`, `${renderPaneTargetName}.${renderPaneTargetName}`);

const script = hidemaru.loadTextFile(currentMacroDirectory + "\\HmConvAIWeb.js");
eval(script);

// urlの構築
function makeUrl(baseUrl, text) {
    const absoluteUrl = new URL(baseUrl);
    const params = new URLSearchParams({ q: text });
    absoluteUrl.search = params.toString();
    return absoluteUrl.href;
}

// ブラウザウィンドウオープン
function openRenderPaneCommand(text) {

    // 個別ブラウザ枠が、このCopilotだと思われるならば、
    let url = browserpanecommand({
        "target": "_each",
        "get": "url",
    });

    // 開かれていない時だけ...
    if (!url.includes(baseUrl)) {

        const url = makeUrl(baseUrl, text);

        let renderPaneOriginalParam = {
            target: "_each",
            url: url,
            initialize: "async",
            show: 1,
            size: 450,
        };

        const browserPaneMixParam = { ...renderPaneOriginalParam, ...renderPaneCustomParam };

        browserpanecommand(browserPaneMixParam);
    }
    
    // すでにHmXGrokWeb が開かている
    else {
        hidemaru.setTimeout(waitBrowserPane, 0, text);
    }
}

doMain();
} // js
